package client;

import Entity.Entry;
import Entity.Feature;
import Entity.User;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class Client {


    public static void main(String[] args) throws Exception {
        System.out.println(sendLoginRequest(new User("Andrei", "andreiu")));
    }

    //User Controller Client Methods

    //getAllUsers in db
    public static String displayAllUsers(){

        String url = "http://localhost:8080/users/getall";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("GET");
        con.setRequestProperty("Content-Type","application/json");
        return getOutputwithoutobject(con);
    }


    //getOneUser
    public static String askforOneUser(User user){
        String url = "http://localhost:8080/users/getone";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject details=new JSONObject();
        details.put("username",user.getUsername());
        return getOutputwithobject(con,details);
    }


    //AddUser
    public static String addnewuser(User user){
        String url = "http://localhost:8080/users/register";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");

        con.setRequestProperty("Content-Type","application/json");

        JSONObject newuser=new JSONObject();
        newuser.put("username",user.getUsername());
        newuser.put("password",user.getPassword());
        return getOutputwithobject(con,newuser);
    }


    public static String removefromdb(User user){
        String url = "http://localhost:8080/users/delete";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");

        con.setRequestProperty("Content-Type","application/json");

        return getOutput(con,empty);
        JSONObject usertbd=new JSONObject();
        usertbd.put("username",user.getUsername());
        usertbd.put("password",user.getPassword());
        return getOutputwithoutobject(con,usertbd);
    }


    public static String sendLoginRequest(User user) throws Exception {
        String url = "http://localhost:8080/users/authenticate";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject us = new JSONObject();
        us.put("password",user.getPassword());
        us.put("username",user.getUsername());

        return getOutputwithobject(con,us);
    }


    //Entry Controller client side methods
    //all entry info
    public static String get_all_db_entries(){
        String url = "http://localhost:8080/entries/get";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("GET");
        return getOutputwithoutobject(con);
    }


    public static String get_entries_by_feature(Feature feature) {
        String url = "http://localhost:8080/users/getbyfeature";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type", "application/json");

        JSONObject details = new JSONObject();
        details.put("featurename", feature.getfeaturename());
        return getOutputwithobject(con, details);

    }


    public static String get_entries_per_username(User user){
        String url = "http://localhost:8080/entries/getbyuser";

        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject details=new JSONObject();
        details.put("username",user.getUsername());
        return getOutputwithobject(con,details);
    }

    public static String addEntry(Feature feature, User user) throws Exception{
        String url = "http://localhost:8080/entries/add";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        Entry entry = new Entry(feature.getFeature(), user.getUsername());

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject send = new JSONObject();
        send.put("feature",feature.getFeature());
        send.put("username",user.getUsername());

        return getOutputwithobject(con,send);
    }



    //Feature Controller client side methods

    public static String getAllFeatures(){
        String url = "http://localhost:8080/features/getall";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("GET");
        con.setRequestProperty("Content-Type","application/json");

        return getOutputwithoutobject(con);
    }

}

    public static String addFeature(Feature feature){
        String url = "http://localhost:8080/features/add";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        Feature newfeature = new Feature(feature.getFeature(), user.getUsername());

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject send = new JSONObject();
        send.put("featureID",feature.getFeature());
        send.put("feature_name",feature.getFeature_name());
        send.put("feature_value",feature.getFeature_value());

        return getOutputwithobject(con,send);
    }

    public static String deleteFeaturebyID(Feature feature){
        String url = "http://localhost:8080/features//delete/{id}";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        Entry entry = new Entry(feature.getFeature(), user.getUsername());

        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type","application/json");

        JSONObject send = new JSONObject();
        send.put("feature",feature.getFeature());
        send.put("featureID",feature.getFeatureID());

        return getOutputwithobject(con,send);
    }




}









    //OUTPUT METHODS

    public static String getOutputwithobject(HttpURLConnection con, JSONObject send) throws IOException {
        con.setDoOutput(true);
        DataOutputStream wr = new DataOutputStream(con.getOutputStream());
        wr.writeBytes(send.toString());
        wr.flush();
        wr.close();

        int responseCode = con.getResponseCode();

        BufferedReader in = new BufferedReader(
                new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }

        return response.toString();
    }

    public static String getOutputwithoutobject(HttpURLConnection con) throws IOException {
        con.setDoOutput(true);
        DataOutputStream wr = new DataOutputStream(con.getOutputStream());
        wr.flush();
        wr.close();

        int responseCode = con.getResponseCode();

        BufferedReader in = new BufferedReader(
                new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }

        return response.toString();
    }
}

